var app=function(){"use strict";function e(){}function r(e,r){for(const t in r)e[t]=r[t];return e}function t(e){return e()}function s(){return Object.create(null)}function o(e){e.forEach(t)}function n(e){return"function"==typeof e}function i(e,r){return e!=e?r==r:e!==r||e&&"object"==typeof e||"function"==typeof e}function a(e,r){e.appendChild(r)}function c(e,r,t){e.insertBefore(r,t||null)}function p(e){e.parentNode.removeChild(e)}function l(e,r){for(let t=0;t<e.length;t+=1)e[t]&&e[t].d(r)}function u(e){return document.createElement(e)}function m(e){return document.createTextNode(e)}function d(){return m(" ")}function g(){return m("")}function T(e,r,t){null==t?e.removeAttribute(r):e.getAttribute(r)!==t&&e.setAttribute(r,t)}function h(e,r){r=""+r,e.wholeText!==r&&(e.data=r)}function w(e,r,t,s){e.style.setProperty(r,t,s?"important":"")}let E;function f(e){E=e}function b(){if(!E)throw new Error("Function called outside component initialization");return E}function _(e){b().$$.on_mount.push(e)}function v(){const e=b();return(r,t)=>{const s=e.$$.callbacks[r];if(s){const o=function(e,r){const t=document.createEvent("CustomEvent");return t.initCustomEvent(e,!1,!1,r),t}(r,t);s.slice().forEach((r=>{r.call(e,o)}))}}}function y(e,r){const t=e.$$.callbacks[r.type];t&&t.slice().forEach((e=>e(r)))}const G=[],k=[],P=[],O=[],A=Promise.resolve();let S=!1;function R(){S||(S=!0,A.then(D))}function C(){return R(),A}function F(e){P.push(e)}let $=!1;const U=new Set;function D(){if(!$){$=!0;do{for(let e=0;e<G.length;e+=1){const r=G[e];f(r),j(r.$$)}for(f(null),G.length=0;k.length;)k.pop()();for(let e=0;e<P.length;e+=1){const r=P[e];U.has(r)||(U.add(r),r())}P.length=0}while(G.length);for(;O.length;)O.pop()();S=!1,$=!1,U.clear()}}function j(e){if(null!==e.fragment){e.update(),o(e.before_update);const r=e.dirty;e.dirty=[-1],e.fragment&&e.fragment.p(e.ctx,r),e.after_update.forEach(F)}}const L=new Set;let q;function I(){q={r:0,c:[],p:q}}function x(){q.r||o(q.c),q=q.p}function H(e,r){e&&e.i&&(L.delete(e),e.i(r))}function W(e,r,t,s){if(e&&e.o){if(L.has(e))return;L.add(e),q.c.push((()=>{L.delete(e),s&&(t&&e.d(1),s())})),e.o(r)}}function B(e,r){const t={},s={},o={$$scope:1};let n=e.length;for(;n--;){const i=e[n],a=r[n];if(a){for(const e in i)e in a||(s[e]=1);for(const e in a)o[e]||(t[e]=a[e],o[e]=1);e[n]=a}else for(const e in i)o[e]=1}for(const e in s)e in t||(t[e]=void 0);return t}function z(e){return"object"==typeof e&&null!==e?e:{}}function M(e){e&&e.c()}function N(e,r,s){const{fragment:i,on_mount:a,on_destroy:c,after_update:p}=e.$$;i&&i.m(r,s),F((()=>{const r=a.map(t).filter(n);c?c.push(...r):o(r),e.$$.on_mount=[]})),p.forEach(F)}function K(e,r){const t=e.$$;null!==t.fragment&&(o(t.on_destroy),t.fragment&&t.fragment.d(r),t.on_destroy=t.fragment=null,t.ctx=[])}function V(r,t,n,i,a,c,l=[-1]){const u=E;f(r);const m=t.props||{},d=r.$$={fragment:null,ctx:null,props:c,update:e,not_equal:a,bound:s(),on_mount:[],on_destroy:[],before_update:[],after_update:[],context:new Map(u?u.$$.context:[]),callbacks:s(),dirty:l,skip_bound:!1};let g=!1;if(d.ctx=n?n(r,m,((e,t,...s)=>{const o=s.length?s[0]:t;return d.ctx&&a(d.ctx[e],d.ctx[e]=o)&&(!d.skip_bound&&d.bound[e]&&d.bound[e](o),g&&function(e,r){-1===e.$$.dirty[0]&&(G.push(e),R(),e.$$.dirty.fill(0)),e.$$.dirty[r/31|0]|=1<<r%31}(r,e)),t})):[],d.update(),g=!0,o(d.before_update),d.fragment=!!i&&i(d.ctx),t.target){if(t.hydrate){const e=function(e){return Array.from(e.childNodes)}(t.target);d.fragment&&d.fragment.l(e),e.forEach(p)}else d.fragment&&d.fragment.c();t.intro&&H(r.$$.fragment),N(r,t.target,t.anchor),D()}f(u)}class Y{$destroy(){K(this,1),this.$destroy=e}$on(e,r){const t=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return t.push(r),()=>{const e=t.indexOf(r);-1!==e&&t.splice(e,1)}}$set(e){var r;this.$$set&&(r=e,0!==Object.keys(r).length)&&(this.$$.skip_bound=!0,this.$$set(e),this.$$.skip_bound=!1)}}const J=[];function Z(e,r){return{subscribe:X(e,r).subscribe}}function X(r,t=e){let s;const o=[];function n(e){if(i(r,e)&&(r=e,s)){const e=!J.length;for(let e=0;e<o.length;e+=1){const t=o[e];t[1](),J.push(t,r)}if(e){for(let e=0;e<J.length;e+=2)J[e][0](J[e+1]);J.length=0}}}return{set:n,update:function(e){n(e(r))},subscribe:function(i,a=e){const c=[i,a];return o.push(c),1===o.length&&(s=t(n)||e),i(r),()=>{const e=o.indexOf(c);-1!==e&&o.splice(e,1),0===o.length&&(s(),s=null)}}}}function Q(r,t,s){const i=!Array.isArray(r),a=i?[r]:r,c=t.length<2;return Z(s,(r=>{let s=!1;const p=[];let l=0,u=e;const m=()=>{if(l)return;u();const s=t(i?p[0]:p,r);c?r(s):u=n(s)?s:e},d=a.map(((r,t)=>function(r,...t){if(null==r)return e;const s=r.subscribe(...t);return s.unsubscribe?()=>s.unsubscribe():s}(r,(e=>{p[t]=e,l&=~(1<<t),s&&m()}),(()=>{l|=1<<t}))));return s=!0,m(),function(){o(d),u()}}))}function ee(e){let t,s,o;const n=[e[2]];var i=e[0];function a(e){let t={};for(let e=0;e<n.length;e+=1)t=r(t,n[e]);return{props:t}}return i&&(t=new i(a()),t.$on("routeEvent",e[7])),{c(){t&&M(t.$$.fragment),s=g()},m(e,r){t&&N(t,e,r),c(e,s,r),o=!0},p(e,r){const o=4&r?B(n,[z(e[2])]):{};if(i!==(i=e[0])){if(t){I();const e=t;W(e.$$.fragment,1,0,(()=>{K(e,1)})),x()}i?(t=new i(a()),t.$on("routeEvent",e[7]),M(t.$$.fragment),H(t.$$.fragment,1),N(t,s.parentNode,s)):t=null}else i&&t.$set(o)},i(e){o||(t&&H(t.$$.fragment,e),o=!0)},o(e){t&&W(t.$$.fragment,e),o=!1},d(e){e&&p(s),t&&K(t,e)}}}function re(e){let t,s,o;const n=[{params:e[1]},e[2]];var i=e[0];function a(e){let t={};for(let e=0;e<n.length;e+=1)t=r(t,n[e]);return{props:t}}return i&&(t=new i(a()),t.$on("routeEvent",e[6])),{c(){t&&M(t.$$.fragment),s=g()},m(e,r){t&&N(t,e,r),c(e,s,r),o=!0},p(e,r){const o=6&r?B(n,[2&r&&{params:e[1]},4&r&&z(e[2])]):{};if(i!==(i=e[0])){if(t){I();const e=t;W(e.$$.fragment,1,0,(()=>{K(e,1)})),x()}i?(t=new i(a()),t.$on("routeEvent",e[6]),M(t.$$.fragment),H(t.$$.fragment,1),N(t,s.parentNode,s)):t=null}else i&&t.$set(o)},i(e){o||(t&&H(t.$$.fragment,e),o=!0)},o(e){t&&W(t.$$.fragment,e),o=!1},d(e){e&&p(s),t&&K(t,e)}}}function te(e){let r,t,s,o;const n=[re,ee],i=[];function a(e,r){return e[1]?0:1}return r=a(e),t=i[r]=n[r](e),{c(){t.c(),s=g()},m(e,t){i[r].m(e,t),c(e,s,t),o=!0},p(e,[o]){let c=r;r=a(e),r===c?i[r].p(e,o):(I(),W(i[c],1,1,(()=>{i[c]=null})),x(),t=i[r],t||(t=i[r]=n[r](e),t.c()),H(t,1),t.m(s.parentNode,s))},i(e){o||(H(t),o=!0)},o(e){W(t),o=!1},d(e){i[r].d(e),e&&p(s)}}}function se(){const e=window.location.href.indexOf("#/");let r=e>-1?window.location.href.substr(e+1):"/";const t=r.indexOf("?");let s="";return t>-1&&(s=r.substr(t+1),r=r.substr(0,t)),{location:r,querystring:s}}const oe=Z(null,(function(e){e(se());const r=()=>{e(se())};return window.addEventListener("hashchange",r,!1),function(){window.removeEventListener("hashchange",r,!1)}}));Q(oe,(e=>e.location)),Q(oe,(e=>e.querystring));function ne(e,r,t){let{routes:s={}}=r,{prefix:o=""}=r,{restoreScrollState:n=!1}=r;class i{constructor(e,r){if(!r||"function"!=typeof r&&("object"!=typeof r||!0!==r._sveltesparouter))throw Error("Invalid component object");if(!e||"string"==typeof e&&(e.length<1||"/"!=e.charAt(0)&&"*"!=e.charAt(0))||"object"==typeof e&&!(e instanceof RegExp))throw Error('Invalid value for "path" argument - strings must start with / or *');const{pattern:t,keys:s}=function(e,r){if(e instanceof RegExp)return{keys:!1,pattern:e};var t,s,o,n,i=[],a="",c=e.split("/");for(c[0]||c.shift();o=c.shift();)"*"===(t=o[0])?(i.push("wild"),a+="/(.*)"):":"===t?(s=o.indexOf("?",1),n=o.indexOf(".",1),i.push(o.substring(1,~s?s:~n?n:o.length)),a+=~s&&!~n?"(?:/([^/]+?))?":"/([^/]+?)",~n&&(a+=(~s?"?":"")+"\\"+o.substring(n))):a+="/"+o;return{keys:i,pattern:new RegExp("^"+a+(r?"(?=$|/)":"/?$"),"i")}}(e);this.path=e,"object"==typeof r&&!0===r._sveltesparouter?(this.component=r.component,this.conditions=r.conditions||[],this.userData=r.userData,this.props=r.props||{}):(this.component=()=>Promise.resolve(r),this.conditions=[],this.props={}),this._pattern=t,this._keys=s}match(e){if(o)if("string"==typeof o){if(!e.startsWith(o))return null;e=e.substr(o.length)||"/"}else if(o instanceof RegExp){const r=e.match(o);if(!r||!r[0])return null;e=e.substr(r[0].length)||"/"}const r=this._pattern.exec(e);if(null===r)return null;if(!1===this._keys)return r;const t={};let s=0;for(;s<this._keys.length;){try{t[this._keys[s]]=decodeURIComponent(r[s+1]||"")||null}catch(e){t[this._keys[s]]=null}s++}return t}async checkConditions(e){for(let r=0;r<this.conditions.length;r++)if(!await this.conditions[r](e))return!1;return!0}}const a=[];s instanceof Map?s.forEach(((e,r)=>{a.push(new i(r,e))})):Object.keys(s).forEach((e=>{a.push(new i(e,s[e]))}));let c=null,p=null,l={};const u=v();async function m(e,r){await C(),u(e,r)}let d=null;var g;n&&(window.addEventListener("popstate",(e=>{d=e.state&&e.state.scrollY?e.state:null})),g=()=>{d?window.scrollTo(d.scrollX,d.scrollY):window.scrollTo(0,0)},b().$$.after_update.push(g));let T=null,h=null;return oe.subscribe((async e=>{T=e;let r=0;for(;r<a.length;){const s=a[r].match(e.location);if(!s){r++;continue}const o={route:a[r].path,location:e.location,querystring:e.querystring,userData:a[r].userData};if(!await a[r].checkConditions(o))return t(0,c=null),h=null,void m("conditionsFailed",o);m("routeLoading",Object.assign({},o));const n=a[r].component;if(h!=n){n.loading?(t(0,c=n.loading),h=n,t(1,p=n.loadingParams),t(2,l={}),m("routeLoaded",Object.assign({},o,{component:c,name:c.name}))):(t(0,c=null),h=null);const r=await n();if(e!=T)return;t(0,c=r&&r.default||r),h=n}return s&&"object"==typeof s&&Object.keys(s).length?t(1,p=s):t(1,p=null),t(2,l=a[r].props),void m("routeLoaded",Object.assign({},o,{component:c,name:c.name}))}t(0,c=null),h=null})),e.$$set=e=>{"routes"in e&&t(3,s=e.routes),"prefix"in e&&t(4,o=e.prefix),"restoreScrollState"in e&&t(5,n=e.restoreScrollState)},e.$$.update=()=>{32&e.$$.dirty&&(history.scrollRestoration=n?"manual":"auto")},[c,p,l,s,o,n,function(r){y(e,r)},function(r){y(e,r)}]}class ie extends Y{constructor(e){super(),V(this,e,ne,te,i,{routes:3,prefix:4,restoreScrollState:5})}}function ae(){return"object"==typeof navigator&&"userAgent"in navigator?navigator.userAgent:"object"==typeof process&&"version"in process?`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`:"<environment undetectable>"}var ce=function e(r,t,s,o){if("function"!=typeof s)throw new Error("method for before hook must be a function");o||(o={});if(Array.isArray(t))return t.reverse().reduce((function(t,s){return e.bind(null,r,s,t,o)}),s)();return Promise.resolve().then((function(){return r.registry[t]?r.registry[t].reduce((function(e,r){return r.hook.bind(null,e,o)}),s)():s(o)}))};var pe=function(e,r,t,s){var o=s;e.registry[t]||(e.registry[t]=[]);"before"===r&&(s=function(e,r){return Promise.resolve().then(o.bind(null,r)).then(e.bind(null,r))});"after"===r&&(s=function(e,r){var t;return Promise.resolve().then(e.bind(null,r)).then((function(e){return o(t=e,r)})).then((function(){return t}))});"error"===r&&(s=function(e,r){return Promise.resolve().then(e.bind(null,r)).catch((function(e){return o(e,r)}))});e.registry[t].push({hook:s,orig:o})};var le=function(e,r,t){if(!e.registry[r])return;var s=e.registry[r].map((function(e){return e.orig})).indexOf(t);if(-1===s)return;e.registry[r].splice(s,1)};var ue=Function.bind,me=ue.bind(ue);function de(e,r,t){var s=me(le,null).apply(null,t?[r,t]:[r]);e.api={remove:s},e.remove=s,["before","error","after","wrap"].forEach((function(s){var o=t?[r,s,t]:[r,s];e[s]=e.api[s]=me(pe,null).apply(null,o)}))}function ge(){var e={registry:{}},r=ce.bind(null,e);return de(r,e),r}var Te=!1;function he(){return Te||(console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4'),Te=!0),ge()}he.Singular=function(){var e={registry:{}},r=ce.bind(null,e,"h");return de(r,e,"h"),r}.bind(),he.Collection=ge.bind();var we=he,Ee=he,fe=he.Singular,be=he.Collection;
/*!
     * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
     *
     * Copyright (c) 2014-2017, Jon Schlinkert.
     * Released under the MIT License.
     */
function _e(e){return"[object Object]"===Object.prototype.toString.call(e)}function ve(e){var r,t;return!1!==_e(e)&&(void 0===(r=e.constructor)||!1!==_e(t=r.prototype)&&!1!==t.hasOwnProperty("isPrototypeOf"))}function ye(e,r){const t=Object.assign({},e);return Object.keys(r).forEach((s=>{ve(r[s])?s in e?t[s]=ye(e[s],r[s]):Object.assign(t,{[s]:r[s]}):Object.assign(t,{[s]:r[s]})})),t}function Ge(e){for(const r in e)void 0===e[r]&&delete e[r];return e}function ke(e,r,t){if("string"==typeof r){let[e,s]=r.split(" ");t=Object.assign(s?{method:e,url:s}:{url:e},t)}else t=Object.assign({},r);var s;t.headers=(s=t.headers)?Object.keys(s).reduce(((e,r)=>(e[r.toLowerCase()]=s[r],e)),{}):{},Ge(t),Ge(t.headers);const o=ye(e||{},t);return e&&e.mediaType.previews.length&&(o.mediaType.previews=e.mediaType.previews.filter((e=>!o.mediaType.previews.includes(e))).concat(o.mediaType.previews)),o.mediaType.previews=o.mediaType.previews.map((e=>e.replace(/-preview/,""))),o}we.Hook=Ee,we.Singular=fe,we.Collection=be;const Pe=/\{[^}]+\}/g;function Oe(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}function Ae(e,r){return Object.keys(e).filter((e=>!r.includes(e))).reduce(((r,t)=>(r[t]=e[t],r)),{})}function Se(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map((function(e){return/%[0-9A-Fa-f]/.test(e)||(e=encodeURI(e).replace(/%5B/g,"[").replace(/%5D/g,"]")),e})).join("")}function Re(e){return encodeURIComponent(e).replace(/[!'()*]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function Ce(e,r,t){return r="+"===e||"#"===e?Se(r):Re(r),t?Re(t)+"="+r:r}function Fe(e){return null!=e}function $e(e){return";"===e||"&"===e||"?"===e}function Ue(e,r){var t=["+","#",".","/",";","?","&"];return e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,(function(e,s,o){if(s){let e="";const o=[];if(-1!==t.indexOf(s.charAt(0))&&(e=s.charAt(0),s=s.substr(1)),s.split(/,/g).forEach((function(t){var s=/([^:\*]*)(?::(\d+)|(\*))?/.exec(t);o.push(function(e,r,t,s){var o=e[t],n=[];if(Fe(o)&&""!==o)if("string"==typeof o||"number"==typeof o||"boolean"==typeof o)o=o.toString(),s&&"*"!==s&&(o=o.substring(0,parseInt(s,10))),n.push(Ce(r,o,$e(r)?t:""));else if("*"===s)Array.isArray(o)?o.filter(Fe).forEach((function(e){n.push(Ce(r,e,$e(r)?t:""))})):Object.keys(o).forEach((function(e){Fe(o[e])&&n.push(Ce(r,o[e],e))}));else{const e=[];Array.isArray(o)?o.filter(Fe).forEach((function(t){e.push(Ce(r,t))})):Object.keys(o).forEach((function(t){Fe(o[t])&&(e.push(Re(t)),e.push(Ce(r,o[t].toString())))})),$e(r)?n.push(Re(t)+"="+e.join(",")):0!==e.length&&n.push(e.join(","))}else";"===r?Fe(o)&&n.push(Re(t)):""!==o||"&"!==r&&"?"!==r?""===o&&n.push(""):n.push(Re(t)+"=");return n}(r,e,s[1],s[2]||s[3]))})),e&&"+"!==e){var n=",";return"?"===e?n="&":"#"!==e&&(n=e),(0!==o.length?e:"")+o.join(n)}return o.join(",")}return Se(o)}))}function De(e){let r,t=e.method.toUpperCase(),s=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}"),o=Object.assign({},e.headers),n=Ae(e,["method","baseUrl","url","headers","request","mediaType"]);const i=function(e){const r=e.match(Pe);return r?r.map(Oe).reduce(((e,r)=>e.concat(r)),[]):[]}(s);var a;s=(a=s,{expand:Ue.bind(null,a)}).expand(n),/^http/.test(s)||(s=e.baseUrl+s);const c=Ae(n,Object.keys(e).filter((e=>i.includes(e))).concat("baseUrl"));if(!/application\/octet-stream/i.test(o.accept)&&(e.mediaType.format&&(o.accept=o.accept.split(/,/).map((r=>r.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,"application/vnd$1$2."+e.mediaType.format))).join(",")),e.mediaType.previews.length)){const r=o.accept.match(/[\w-]+(?=-preview)/g)||[];o.accept=r.concat(e.mediaType.previews).map((r=>`application/vnd.github.${r}-preview${e.mediaType.format?"."+e.mediaType.format:"+json"}`)).join(",")}return["GET","HEAD"].includes(t)?s=function(e,r){const t=/\?/.test(e)?"&":"?",s=Object.keys(r);return 0===s.length?e:e+t+s.map((e=>"q"===e?"q="+r.q.split("+").map(encodeURIComponent).join("+"):`${e}=${encodeURIComponent(r[e])}`)).join("&")}(s,c):"data"in c?r=c.data:Object.keys(c).length?r=c:o["content-length"]=0,o["content-type"]||void 0===r||(o["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(t)&&void 0===r&&(r=""),Object.assign({method:t,url:s,headers:o},void 0!==r?{body:r}:null,e.request?{request:e.request}:null)}function je(e,r,t){return De(ke(e,r,t))}const Le=function e(r,t){const s=ke(r,t),o=je.bind(null,s);return Object.assign(o,{DEFAULTS:s,defaults:e.bind(null,s),merge:ke.bind(null,s),parse:De})}(null,{method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":"octokit-endpoint.js/6.0.10 "+ae()},mediaType:{format:"",previews:[]}});var qe,Ie,xe=(function(e,r){var t=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==t)return t;throw new Error("unable to locate global object")}();e.exports=r=t.fetch,t.fetch&&(r.default=t.fetch.bind(t)),r.Headers=t.Headers,r.Request=t.Request,r.Response=t.Response}(Ie={path:qe,exports:{},require:function(e,r){return function(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}(null==r&&Ie.path)}},Ie.exports),Ie.exports);class He extends Error{constructor(e){super(e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="Deprecation"}}var We=function e(r,t){if(r&&t)return e(r)(t);if("function"!=typeof r)throw new TypeError("need wrapper function");return Object.keys(r).forEach((function(e){s[e]=r[e]})),s;function s(){for(var e=new Array(arguments.length),t=0;t<e.length;t++)e[t]=arguments[t];var s=r.apply(this,e),o=e[e.length-1];return"function"==typeof s&&s!==o&&Object.keys(o).forEach((function(e){s[e]=o[e]})),s}};var Be=We(Me),ze=We(Ne);function Me(e){var r=function(){return r.called?r.value:(r.called=!0,r.value=e.apply(this,arguments))};return r.called=!1,r}function Ne(e){var r=function(){if(r.called)throw new Error(r.onceError);return r.called=!0,r.value=e.apply(this,arguments)},t=e.name||"Function wrapped with `once`";return r.onceError=t+" shouldn't be called more than once",r.called=!1,r}Me.proto=Me((function(){Object.defineProperty(Function.prototype,"once",{value:function(){return Me(this)},configurable:!0}),Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return Ne(this)},configurable:!0})})),Be.strict=ze;const Ke=Be((e=>console.warn(e)));class Ve extends Error{constructor(e,r,t){super(e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="HttpError",this.status=r,Object.defineProperty(this,"code",{get:()=>(Ke(new He("[@octokit/request-error] `error.code` is deprecated, use `error.status`.")),r)}),this.headers=t.headers||{};const s=Object.assign({},t.request);t.request.headers.authorization&&(s.headers=Object.assign({},t.request.headers,{authorization:t.request.headers.authorization.replace(/ .*$/," [REDACTED]")})),s.url=s.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=s}}function Ye(e){(ve(e.body)||Array.isArray(e.body))&&(e.body=JSON.stringify(e.body));let r,t,s={};return(e.request&&e.request.fetch||xe)(e.url,Object.assign({method:e.method,body:e.body,headers:e.headers,redirect:e.redirect},e.request)).then((o=>{t=o.url,r=o.status;for(const e of o.headers)s[e[0]]=e[1];if(204===r||205===r)return;if("HEAD"===e.method){if(r<400)return;throw new Ve(o.statusText,r,{headers:s,request:e})}if(304===r)throw new Ve("Not modified",r,{headers:s,request:e});if(r>=400)return o.text().then((t=>{const o=new Ve(t,r,{headers:s,request:e});try{let e=JSON.parse(o.message);Object.assign(o,e);let r=e.errors;o.message=o.message+": "+r.map(JSON.stringify).join(", ")}catch(e){}throw o}));const n=o.headers.get("content-type");return/application\/json/.test(n)?o.json():!n||/^text\/|charset=utf-8$/.test(n)?o.text():function(e){return e.arrayBuffer()}(o)})).then((e=>({status:r,url:t,headers:s,data:e}))).catch((r=>{if(r instanceof Ve)throw r;throw new Ve(r.message,500,{headers:s,request:e})}))}const Je=function e(r,t){const s=r.defaults(t);return Object.assign((function(r,t){const o=s.merge(r,t);if(!o.request||!o.request.hook)return Ye(s.parse(o));const n=(e,r)=>Ye(s.parse(s.merge(e,r)));return Object.assign(n,{endpoint:s,defaults:e.bind(null,s)}),o.request.hook(n,o)}),{endpoint:s,defaults:e.bind(null,s)})}(Le,{headers:{"user-agent":"octokit-request.js/5.4.12 "+ae()}});class Ze extends Error{constructor(e,r){super(r.data.errors[0].message),Object.assign(this,r.data),Object.assign(this,{headers:r.headers}),this.name="GraphqlError",this.request=e,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}}const Xe=["method","baseUrl","url","headers","request","query","mediaType"],Qe=/\/api\/v3\/?$/;function er(e,r){const t=e.defaults(r);return Object.assign(((e,r)=>function(e,r,t){if("string"==typeof r&&t&&"query"in t)return Promise.reject(new Error('[@octokit/graphql] "query" cannot be used as variable name'));const s="string"==typeof r?Object.assign({query:r},t):r,o=Object.keys(s).reduce(((e,r)=>Xe.includes(r)?(e[r]=s[r],e):(e.variables||(e.variables={}),e.variables[r]=s[r],e)),{}),n=s.baseUrl||e.endpoint.DEFAULTS.baseUrl;return Qe.test(n)&&(o.url=n.replace(Qe,"/api/graphql")),e(o).then((e=>{if(e.data.errors){const r={};for(const t of Object.keys(e.headers))r[t]=e.headers[t];throw new Ze(o,{headers:r,data:e.data})}return e.data.data}))}(t,e,r)),{defaults:er.bind(null,t),endpoint:Je.endpoint})}er(Je,{headers:{"user-agent":"octokit-graphql.js/4.5.8 "+ae()},method:"POST",url:"/graphql"});async function rr(e){const r=3===e.split(/\./).length?"app":/^v\d+\./.test(e)?"installation":"oauth";return{type:"token",token:e,tokenType:r}}async function tr(e,r,t,s){const o=r.endpoint.merge(t,s);return o.headers.authorization=function(e){return 3===e.split(/\./).length?"bearer "+e:"token "+e}(e),r(o)}const sr=function(e){if(!e)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if("string"!=typeof e)throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return e=e.replace(/^(token|bearer) +/i,""),Object.assign(rr.bind(null,e),{hook:tr.bind(null,e)})},or="3.2.4";class nr{constructor(e={}){const r=new be,t={baseUrl:Je.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},e.request,{hook:r.bind(null,"request")}),mediaType:{previews:[],format:""}};var s;if(t.headers["user-agent"]=[e.userAgent,"octokit-core.js/3.2.4 "+ae()].filter(Boolean).join(" "),e.baseUrl&&(t.baseUrl=e.baseUrl),e.previews&&(t.mediaType.previews=e.previews),e.timeZone&&(t.headers["time-zone"]=e.timeZone),this.request=Je.defaults(t),this.graphql=(s=this.request,er(s,{method:"POST",url:"/graphql"})).defaults(t),this.log=Object.assign({debug:()=>{},info:()=>{},warn:console.warn.bind(console),error:console.error.bind(console)},e.log),this.hook=r,e.authStrategy){const{authStrategy:t,...s}=e,o=t(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:s},e.auth));r.wrap("request",o.hook),this.auth=o}else if(e.auth){const t=sr(e.auth);r.wrap("request",t.hook),this.auth=t}else this.auth=async()=>({type:"unauthenticated"});this.constructor.plugins.forEach((r=>{Object.assign(this,r(this,e))}))}static defaults(e){return class extends(this){constructor(...r){const t=r[0]||{};super("function"!=typeof e?Object.assign({},e,t,t.userAgent&&e.userAgent?{userAgent:`${t.userAgent} ${e.userAgent}`}:null):e(t))}}}static plugin(...e){var r;const t=this.plugins;return(r=class extends(this){}).plugins=t.concat(e.filter((e=>!t.includes(e)))),r}}nr.VERSION=or,nr.plugins=[];function ir(e){e.hook.wrap("request",((r,t)=>{e.log.debug("request",t);const s=Date.now(),o=e.request.endpoint.parse(t),n=o.url.replace(t.baseUrl,"");return r(t).then((r=>(e.log.info(`${o.method} ${n} - ${r.status} in ${Date.now()-s}ms`),r))).catch((r=>{throw e.log.info(`${o.method} ${n} - ${r.status} in ${Date.now()-s}ms`),r}))}))}ir.VERSION="1.0.2";function ar(e,r,t){const s="function"==typeof r?r.endpoint(t):e.request.endpoint(r,t),o="function"==typeof r?r:e.request,n=s.method,i=s.headers;let a=s.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!a)return{done:!0};const e=function(e){if(!("total_count"in e.data)||"url"in e.data)return e;const r=e.data.incomplete_results,t=e.data.repository_selection,s=e.data.total_count;delete e.data.incomplete_results,delete e.data.repository_selection,delete e.data.total_count;const o=Object.keys(e.data)[0],n=e.data[o];return e.data=n,void 0!==r&&(e.data.incomplete_results=r),void 0!==t&&(e.data.repository_selection=t),e.data.total_count=s,e}(await o({method:n,url:a,headers:i}));return a=((e.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1],{value:e}}})}}function cr(e,r,t,s){return"function"==typeof t&&(s=t,t=void 0),pr(e,[],ar(e,r,t)[Symbol.asyncIterator](),s)}function pr(e,r,t,s){return t.next().then((o=>{if(o.done)return r;let n=!1;return r=r.concat(s?s(o.value,(function(){n=!0})):o.value.data),n?r:pr(e,r,t,s)}))}Object.assign(cr,{iterator:ar});function lr(e){return{paginate:Object.assign(cr.bind(null,e),{iterator:ar.bind(null,e)})}}lr.VERSION="2.6.2";const ur={actions:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],disableSelectedRepositoryGithubActionsOrganization:["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],disableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],enableSelectedRepositoryGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],enableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],getAllowedActionsOrganization:["GET /orgs/{org}/actions/permissions/selected-actions"],getAllowedActionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getGithubActionsPermissionsOrganization:["GET /orgs/{org}/actions/permissions"],getGithubActionsPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getRepoPermissions:["GET /repos/{owner}/{repo}/actions/permissions",{},{renamed:["actions","getGithubActionsPermissionsRepository"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelectedRepositoriesEnabledGithubActionsOrganization:["GET /orgs/{org}/actions/permissions/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],setAllowedActionsOrganization:["PUT /orgs/{org}/actions/permissions/selected-actions"],setAllowedActionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],setGithubActionsPermissionsOrganization:["PUT /orgs/{org}/actions/permissions"],setGithubActionsPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],setSelectedRepositoriesEnabledGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createContentAttachment:["POST /content_references/{content_reference_id}/attachments",{mediaType:{previews:["corsair"]}}],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],getWebhookConfigForApp:["GET /app/hook/config"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"],updateWebhookConfigForApp:["PATCH /app/hook/config"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs"],createSuite:["POST /repos/{owner}/{repo}/check-suites"],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences"],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]},codeScanning:{getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct",{mediaType:{previews:["scarlet-witch"]}}],getConductCode:["GET /codes_of_conduct/{key}",{mediaType:{previews:["scarlet-witch"]}}],getForRepo:["GET /repos/{owner}/{repo}/community/code_of_conduct",{mediaType:{previews:["scarlet-witch"]}}]},emojis:{get:["GET /emojis"]},enterpriseAdmin:{disableSelectedOrganizationGithubActionsEnterprise:["DELETE /enterprises/{enterprise}/actions/permissions/organizations/{org_id}"],enableSelectedOrganizationGithubActionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions/organizations/{org_id}"],getAllowedActionsEnterprise:["GET /enterprises/{enterprise}/actions/permissions/selected-actions"],getGithubActionsPermissionsEnterprise:["GET /enterprises/{enterprise}/actions/permissions"],listSelectedOrganizationsEnabledGithubActionsEnterprise:["GET /enterprises/{enterprise}/actions/permissions/organizations"],setAllowedActionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions/selected-actions"],setGithubActionsPermissionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions"],setSelectedOrganizationsEnabledGithubActionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions/organizations"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},interactions:{getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits"],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits"],getRestrictionsForYourPublicRepos:["GET /user/interaction-limits"],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits"],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits"],removeRestrictionsForYourPublicRepos:["DELETE /user/interaction-limits"],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits"],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits"],setRestrictionsForYourPublicRepos:["PUT /user/interaction-limits"]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline",{mediaType:{previews:["mockingbird"]}}],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"],getOctocat:["GET /octocat"],getZen:["GET /zen"],root:["GET /"]},migrations:{cancelImport:["DELETE /repos/{owner}/{repo}/import"],deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],getCommitAuthors:["GET /repos/{owner}/{repo}/import/authors"],getImportStatus:["GET /repos/{owner}/{repo}/import"],getLargeFiles:["GET /repos/{owner}/{repo}/import/large_files"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}",{mediaType:{previews:["wyandotte"]}}],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}",{mediaType:{previews:["wyandotte"]}}],listForAuthenticatedUser:["GET /user/migrations",{mediaType:{previews:["wyandotte"]}}],listForOrg:["GET /orgs/{org}/migrations",{mediaType:{previews:["wyandotte"]}}],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories",{mediaType:{previews:["wyandotte"]}}],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{mediaType:{previews:["wyandotte"]}}],mapCommitAuthor:["PATCH /repos/{owner}/{repo}/import/authors/{author_id}"],setLfsPreference:["PATCH /repos/{owner}/{repo}/import/lfs"],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],startImport:["PUT /repos/{owner}/{repo}/import"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock",{mediaType:{previews:["wyandotte"]}}],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock",{mediaType:{previews:["wyandotte"]}}],updateImport:["PATCH /repos/{owner}/{repo}/import"]},orgs:{blockUser:["PUT /orgs/{org}/blocks/{username}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createInvitation:["POST /orgs/{org}/invitations"],createWebhook:["POST /orgs/{org}/hooks"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],get:["GET /orgs/{org}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],getWebhookConfigForOrg:["GET /orgs/{org}/hooks/{hook_id}/config"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listBlockedUsers:["GET /orgs/{org}/blocks"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listWebhooks:["GET /orgs/{org}/hooks"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateWebhookConfigForOrg:["PATCH /orgs/{org}/hooks/{hook_id}/config"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}",{mediaType:{previews:["inertia"]}}],createCard:["POST /projects/columns/{column_id}/cards",{mediaType:{previews:["inertia"]}}],createColumn:["POST /projects/{project_id}/columns",{mediaType:{previews:["inertia"]}}],createForAuthenticatedUser:["POST /user/projects",{mediaType:{previews:["inertia"]}}],createForOrg:["POST /orgs/{org}/projects",{mediaType:{previews:["inertia"]}}],createForRepo:["POST /repos/{owner}/{repo}/projects",{mediaType:{previews:["inertia"]}}],delete:["DELETE /projects/{project_id}",{mediaType:{previews:["inertia"]}}],deleteCard:["DELETE /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],deleteColumn:["DELETE /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}],get:["GET /projects/{project_id}",{mediaType:{previews:["inertia"]}}],getCard:["GET /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],getColumn:["GET /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission",{mediaType:{previews:["inertia"]}}],listCards:["GET /projects/columns/{column_id}/cards",{mediaType:{previews:["inertia"]}}],listCollaborators:["GET /projects/{project_id}/collaborators",{mediaType:{previews:["inertia"]}}],listColumns:["GET /projects/{project_id}/columns",{mediaType:{previews:["inertia"]}}],listForOrg:["GET /orgs/{org}/projects",{mediaType:{previews:["inertia"]}}],listForRepo:["GET /repos/{owner}/{repo}/projects",{mediaType:{previews:["inertia"]}}],listForUser:["GET /users/{username}/projects",{mediaType:{previews:["inertia"]}}],moveCard:["POST /projects/columns/cards/{card_id}/moves",{mediaType:{previews:["inertia"]}}],moveColumn:["POST /projects/columns/{column_id}/moves",{mediaType:{previews:["inertia"]}}],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}",{mediaType:{previews:["inertia"]}}],update:["PATCH /projects/{project_id}",{mediaType:{previews:["inertia"]}}],updateCard:["PATCH /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],updateColumn:["PATCH /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch",{mediaType:{previews:["lydian"]}}],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteLegacy:["DELETE /reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}},{deprecated:"octokit.reactions.deleteLegacy() is deprecated, see https://docs.github.com/v3/reactions/#delete-a-reaction-legacy"}],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createPagesSite:["POST /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}}],createRelease:["POST /repos/{owner}/{repo}/releases"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate",{mediaType:{previews:["baptiste"]}}],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}}],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes",{mediaType:{previews:["london"]}}],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],downloadArchive:["GET /repos/{owner}/{repo}/zipball/{ref}",{},{renamed:["repos","downloadZipballArchive"]}],downloadTarballArchive:["GET /repos/{owner}/{repo}/tarball/{ref}"],downloadZipballArchive:["GET /repos/{owner}/{repo}/zipball/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes",{mediaType:{previews:["london"]}}],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}}],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getWebhookConfigForRepo:["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head",{mediaType:{previews:["groot"]}}],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls",{mediaType:{previews:["groot"]}}],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}}],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusCheckProtection"]}],updateStatusCheckProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateWebhookConfigForRepo:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits",{mediaType:{previews:["cloak"]}}],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics",{mediaType:{previews:["mercy"]}}],users:["GET /search/users"]},secretScanning:{getAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],listAlertsForRepo:["GET /repos/{owner}/{repo}/secret-scanning/alerts"],updateAlert:["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}}],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}}],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects",{mediaType:{previews:["inertia"]}}],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys"],deleteEmailForAuthenticated:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}"],list:["GET /users"],listBlockedByAuthenticated:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}};function mr(e,r,t,s,o){const n=e.request.defaults(s);return Object.assign((function(...s){let i=n.endpoint.merge(...s);if(o.mapToData)return i=Object.assign({},i,{data:i[o.mapToData],[o.mapToData]:void 0}),n(i);if(o.renamed){const[s,n]=o.renamed;e.log.warn(`octokit.${r}.${t}() has been renamed to octokit.${s}.${n}()`)}if(o.deprecated&&e.log.warn(o.deprecated),o.renamedParameters){const i=n.endpoint.merge(...s);for(const[s,n]of Object.entries(o.renamedParameters))s in i&&(e.log.warn(`"${s}" parameter is deprecated for "octokit.${r}.${t}()". Use "${n}" instead`),n in i||(i[n]=i[s]),delete i[s]);return n(i)}return n(...s)}),n)}function dr(e){return function(e,r){const t={};for(const[s,o]of Object.entries(r))for(const[r,n]of Object.entries(o)){const[o,i,a]=n,[c,p]=o.split(/ /),l=Object.assign({method:c,url:p},i);t[s]||(t[s]={});const u=t[s];u[r]=a?mr(e,s,r,l,a):e.request.defaults(l)}return t}(e,ur)}dr.VERSION="4.4.1";const gr=nr.plugin(ir,dr,lr).defaults({userAgent:"octokit-rest.js/18.0.12"});var Tr={websiteTitle:"Issueage",repoOwner:"zeikar",repoName:"issueage"};const hr=new gr,wr=()=>hr.issues.listForRepo({owner:Tr.repoOwner,repo:Tr.repoName}),Er=e=>hr.issues.get({owner:Tr.repoOwner,repo:Tr.repoName,issue_number:e});function fr(r){let t;return{c(){t=u("div"),T(t,"class","placeholder-item svelte-sa8nwy"),w(t,"width",r[0]+"%")},m(e,r){c(e,t,r)},p(e,[r]){1&r&&w(t,"width",e[0]+"%")},i:e,o:e,d(e){e&&p(t)}}}function br(e,r,t){let{width:s=100}=r;return e.$$set=e=>{"width"in e&&t(0,s=e.width)},[s]}class _r extends Y{constructor(e){super(),V(this,e,br,fr,i,{width:0})}}function vr(e){let r,t;return r=new _r({}),{c(){M(r.$$.fragment)},m(e,s){N(r,e,s),t=!0},i(e){t||(H(r.$$.fragment,e),t=!0)},o(e){W(r.$$.fragment,e),t=!1},d(e){K(r,e)}}}function yr(r){let t,s;return{c(){t=u("img"),T(t,"class","article-image"),t.src!==(s="https://bulma.io/images/placeholders/128x128.png")&&T(t,"src","https://bulma.io/images/placeholders/128x128.png"),T(t,"alt","article thumbnail")},m(e,r){c(e,t,r)},i:e,o:e,d(e){e&&p(t)}}}function Gr(r){let t,s;return t=new _r({props:{width:50}}),{c(){M(t.$$.fragment)},m(e,r){N(t,e,r),s=!0},p:e,i(e){s||(H(t.$$.fragment,e),s=!0)},o(e){W(t.$$.fragment,e),s=!1},d(e){K(t,e)}}}function kr(r){let t,s=r[0].title+"";return{c(){t=m(s)},m(e,r){c(e,t,r)},p(e,r){1&r&&s!==(s=e[0].title+"")&&h(t,s)},i:e,o:e,d(e){e&&p(t)}}}function Pr(r){let t,s;return t=new _r({}),{c(){M(t.$$.fragment)},m(e,r){N(t,e,r),s=!0},p:e,i(e){s||(H(t.$$.fragment,e),s=!0)},o(e){W(t.$$.fragment,e),s=!1},d(e){K(t,e)}}}function Or(r){let t,s=r[0].body+"";return{c(){t=m(s)},m(e,r){c(e,t,r)},p(e,r){1&r&&s!==(s=e[0].body+"")&&h(t,s)},i:e,o:e,d(e){e&&p(t)}}}function Ar(r){let t,s;return t=new _r({props:{width:30}}),{c(){M(t.$$.fragment)},m(e,r){N(t,e,r),s=!0},p:e,i(e){s||(H(t.$$.fragment,e),s=!0)},o(e){W(t.$$.fragment,e),s=!1},d(e){K(t,e)}}}function Sr(r){let t,s,o=r[0].created_at+"";return{c(){t=u("span"),t.innerHTML='<i class="fas fa-clock"></i> \n          ',s=m(o),T(t,"class","icon")},m(e,r){c(e,t,r),c(e,s,r)},p(e,r){1&r&&o!==(o=e[0].created_at+"")&&h(s,o)},i:e,o:e,d(e){e&&p(t),e&&p(s)}}}function Rr(e){let r,t,s,o,n,i,l,m,g,h,w,E,f,b,_,v,y,G,k,P,O,A;const S=[yr,vr],R=[];function C(e,r){return e[0]?0:1}o=C(e),n=R[o]=S[o](e);const F=[kr,Gr],$=[];function U(e,r){return e[0]?0:1}h=U(e),w=$[h]=F[h](e);const D=[Or,Pr],j=[];function L(e,r){return e[0]?0:1}b=L(e),_=j[b]=D[b](e);const q=[Sr,Ar],B=[];function z(e,r){return e[0]?0:1}return G=z(e),k=B[G]=q[G](e),{c(){r=u("div"),t=u("div"),s=u("figure"),n.c(),i=d(),l=u("div"),m=u("div"),g=u("h2"),w.c(),E=d(),f=u("p"),_.c(),v=d(),y=u("p"),k.c(),T(s,"class","image is-128x128"),T(t,"class","column has-text-centered"),T(f,"class","article-content"),T(m,"class","content"),T(l,"class","column is-four-fifths"),T(r,"class","article-wrapper columns is-desktop svelte-wh0ky3")},m(n,p){var u,d,T,w;c(n,r,p),a(r,t),a(t,s),R[o].m(s,null),a(r,i),a(r,l),a(l,m),a(m,g),$[h].m(g,null),a(m,E),a(m,f),j[b].m(f,null),a(m,v),a(m,y),B[G].m(y,null),P=!0,O||(u=r,d="click",T=e[1],u.addEventListener(d,T,w),A=()=>u.removeEventListener(d,T,w),O=!0)},p(e,[r]){let t=o;o=C(e),o!==t&&(I(),W(R[t],1,1,(()=>{R[t]=null})),x(),n=R[o],n||(n=R[o]=S[o](e),n.c()),H(n,1),n.m(s,null));let i=h;h=U(e),h===i?$[h].p(e,r):(I(),W($[i],1,1,(()=>{$[i]=null})),x(),w=$[h],w||(w=$[h]=F[h](e),w.c()),H(w,1),w.m(g,null));let a=b;b=L(e),b===a?j[b].p(e,r):(I(),W(j[a],1,1,(()=>{j[a]=null})),x(),_=j[b],_||(_=j[b]=D[b](e),_.c()),H(_,1),_.m(f,null));let c=G;G=z(e),G===c?B[G].p(e,r):(I(),W(B[c],1,1,(()=>{B[c]=null})),x(),k=B[G],k||(k=B[G]=q[G](e),k.c()),H(k,1),k.m(y,null))},i(e){P||(H(n),H(w),H(_),H(k),P=!0)},o(e){W(n),W(w),W(_),W(k),P=!1},d(e){e&&p(r),R[o].d(),$[h].d(),j[b].d(),B[G].d(),O=!1,A()}}}function Cr(e,r,t){let{issue:s=null}=r;return e.$$set=e=>{"issue"in e&&t(0,s=e.issue)},[s,function(){!async function(e){if(!e||e.length<1||"/"!=e.charAt(0)&&0!==e.indexOf("#/"))throw Error("Invalid parameter location");await C(),history.replaceState({scrollX:window.scrollX,scrollY:window.scrollY},void 0,void 0),window.location.hash=("#"==e.charAt(0)?"":"#")+e}("/articles/"+s.number)}]}class Fr extends Y{constructor(e){super(),V(this,e,Cr,Rr,i,{issue:0})}}function $r(e,r,t){const s=e.slice();return s[4]=r[t],s}function Ur(e,r,t){const s=e.slice();return s[1]=r[t],s}function Dr(r){let t,s,o=Array(5),n=[];for(let e=0;e<o.length;e+=1)n[e]=Lr($r(r,o,e));return{c(){for(let e=0;e<n.length;e+=1)n[e].c();t=g()},m(e,r){for(let t=0;t<n.length;t+=1)n[t].m(e,r);c(e,t,r),s=!0},p:e,i(e){if(!s){for(let e=0;e<o.length;e+=1)H(n[e]);s=!0}},o(e){n=n.filter(Boolean);for(let e=0;e<n.length;e+=1)W(n[e]);s=!1},d(e){l(n,e),e&&p(t)}}}function jr(e){let r,t,s=e[0],o=[];for(let r=0;r<s.length;r+=1)o[r]=qr(Ur(e,s,r));const n=e=>W(o[e],1,1,(()=>{o[e]=null}));return{c(){for(let e=0;e<o.length;e+=1)o[e].c();r=g()},m(e,s){for(let r=0;r<o.length;r+=1)o[r].m(e,s);c(e,r,s),t=!0},p(e,t){if(1&t){let i;for(s=e[0],i=0;i<s.length;i+=1){const n=Ur(e,s,i);o[i]?(o[i].p(n,t),H(o[i],1)):(o[i]=qr(n),o[i].c(),H(o[i],1),o[i].m(r.parentNode,r))}for(I(),i=s.length;i<o.length;i+=1)n(i);x()}},i(e){if(!t){for(let e=0;e<s.length;e+=1)H(o[e]);t=!0}},o(e){o=o.filter(Boolean);for(let e=0;e<o.length;e+=1)W(o[e]);t=!1},d(e){l(o,e),e&&p(r)}}}function Lr(e){let r,t;return r=new Fr({}),{c(){M(r.$$.fragment)},m(e,s){N(r,e,s),t=!0},i(e){t||(H(r.$$.fragment,e),t=!0)},o(e){W(r.$$.fragment,e),t=!1},d(e){K(r,e)}}}function qr(e){let r,t;return r=new Fr({props:{issue:e[1]}}),{c(){M(r.$$.fragment)},m(e,s){N(r,e,s),t=!0},p(e,t){const s={};1&t&&(s.issue=e[1]),r.$set(s)},i(e){t||(H(r.$$.fragment,e),t=!0)},o(e){W(r.$$.fragment,e),t=!1},d(e){K(r,e)}}}function Ir(e){let r,t,s,o,n;const i=[jr,Dr],l=[];function m(e,r){return e[0]?0:1}return s=m(e),o=l[s]=i[s](e),{c(){r=u("section"),t=u("div"),o.c(),T(t,"class","container"),T(r,"class","section")},m(e,o){c(e,r,o),a(r,t),l[s].m(t,null),n=!0},p(e,[r]){let n=s;s=m(e),s===n?l[s].p(e,r):(I(),W(l[n],1,1,(()=>{l[n]=null})),x(),o=l[s],o||(o=l[s]=i[s](e),o.c()),H(o,1),o.m(t,null))},i(e){n||(H(o),n=!0)},o(e){W(o),n=!1},d(e){e&&p(r),l[s].d()}}}function xr(e,r,t){let s=null;return _((()=>{(async()=>{try{return await wr()}catch(e){console.error(e)}})().then((e=>{console.log(e.data),t(0,s=e.data)})).catch((e=>{console.error(e)}))})),[s]}class Hr extends Y{constructor(e){super(),V(this,e,xr,Ir,i,{})}}function Wr(e){let r,t,s,o,n,i,l,g,w,E,f,b,_,v,y,G=e[0].title+"",k=e[0].updated_at+"",P=e[0].body+"";return{c(){r=u("div"),t=u("section"),s=u("div"),o=u("div"),n=u("h1"),i=m(G),l=d(),g=u("h2"),w=m(k),E=d(),f=u("section"),b=u("div"),_=m(P),v=d(),y=u("section"),T(n,"class","is-size-1 has-text-white"),T(g,"class","subtitle has-text-white"),T(o,"class","container"),T(s,"class","hero-body blur-background svelte-1qx52pu"),T(t,"class","hero post-background is-medium has-text-centered has-background svelte-1qx52pu"),T(b,"class","content post"),T(f,"class","section"),T(y,"class","section"),T(r,"class","container")},m(e,p){c(e,r,p),a(r,t),a(t,s),a(s,o),a(o,n),a(n,i),a(o,l),a(o,g),a(g,w),a(r,E),a(r,f),a(f,b),a(b,_),a(r,v),a(r,y)},p(e,r){1&r&&G!==(G=e[0].title+"")&&h(i,G),1&r&&k!==(k=e[0].updated_at+"")&&h(w,k),1&r&&P!==(P=e[0].body+"")&&h(_,P)},d(e){e&&p(r)}}}function Br(r){let t,s=r[0]&&Wr(r);return{c(){s&&s.c(),t=g()},m(e,r){s&&s.m(e,r),c(e,t,r)},p(e,[r]){e[0]?s?s.p(e,r):(s=Wr(e),s.c(),s.m(t.parentNode,t)):s&&(s.d(1),s=null)},i:e,o:e,d(e){s&&s.d(e),e&&p(t)}}}function zr(e,r,t){let{params:s}=r,o=null;return _((()=>{(async e=>{try{return await Er(e)}catch(e){console.error(e)}})(s.issueNumber).then((e=>{console.log(e.data),t(0,o=e.data)})).catch((e=>{console.error(e)}))})),e.$$set=e=>{"params"in e&&t(1,s=e.params)},[o,s]}var Mr={"/":Hr,"/articles":Hr,"/articles/:issueNumber":class extends Y{constructor(e){super(),V(this,e,zr,Br,i,{params:1})}},"*":Hr};function Nr(r){let t,s,o,n,i,l;return{c(){t=u("nav"),s=u("div"),o=u("a"),n=m(r[0]),i=d(),l=u("div"),l.innerHTML='<div class="navbar-start"><a href="/" class="navbar-item">menu here</a></div> \n\n    <div class="navbar-end"><div class="navbar-item"><div class="field has-addons"><div class="control"><input class="input is-rounded" type="search" placeholder="search"/></div> \n          <div class="control"><button class="button is-rounded"><span class="icon is-small"><i class="fas fa-search"></i></span></button></div></div></div></div>',T(o,"href","/"),T(o,"class","navbar-item"),T(s,"class","navbar-brand"),T(l,"class","navbar-menu"),T(t,"class","navbar is-fixed-top"),T(t,"role","navigation"),T(t,"aria-label","main navigation")},m(e,r){c(e,t,r),a(t,s),a(s,o),a(o,n),a(t,i),a(t,l)},p(e,[r]){1&r&&h(n,e[0])},i:e,o:e,d(e){e&&p(t)}}}function Kr(e,r,t){let{websiteTitle:s}=r;return e.$$set=e=>{"websiteTitle"in e&&t(0,s=e.websiteTitle)},[s]}class Vr extends Y{constructor(e){super(),V(this,e,Kr,Nr,i,{websiteTitle:0})}}function Yr(r){let t,s,o,n,i;return{c(){t=u("footer"),s=u("div"),o=u("p"),n=u("strong"),i=m(r[0]),T(s,"class","content has-text-centered"),T(t,"class","footer")},m(e,r){c(e,t,r),a(t,s),a(s,o),a(o,n),a(n,i)},p(e,[r]){1&r&&h(i,e[0])},i:e,o:e,d(e){e&&p(t)}}}function Jr(e,r,t){let{websiteTitle:s}=r;return e.$$set=e=>{"websiteTitle"in e&&t(0,s=e.websiteTitle)},[s]}class Zr extends Y{constructor(e){super(),V(this,e,Jr,Yr,i,{websiteTitle:0})}}function Xr(e){let r,t,s,o,n,i;return r=new Vr({props:{websiteTitle:e[0].websiteTitle}}),s=new ie({props:{routes:Mr}}),n=new Zr({props:{websiteTitle:e[0].websiteTitle}}),{c(){M(r.$$.fragment),t=d(),M(s.$$.fragment),o=d(),M(n.$$.fragment)},m(e,a){N(r,e,a),c(e,t,a),N(s,e,a),c(e,o,a),N(n,e,a),i=!0},p(e,[t]){const s={};1&t&&(s.websiteTitle=e[0].websiteTitle),r.$set(s);const o={};1&t&&(o.websiteTitle=e[0].websiteTitle),n.$set(o)},i(e){i||(H(r.$$.fragment,e),H(s.$$.fragment,e),H(n.$$.fragment,e),i=!0)},o(e){W(r.$$.fragment,e),W(s.$$.fragment,e),W(n.$$.fragment,e),i=!1},d(e){K(r,e),e&&p(t),K(s,e),e&&p(o),K(n,e)}}}function Qr(e,r,t){let{Config:s}=r;return e.$$set=e=>{"Config"in e&&t(0,s=e.Config)},[s]}return new class extends Y{constructor(e){super(),V(this,e,Qr,Xr,i,{Config:0})}}({target:document.body,props:{Config:Tr}})}();
//# sourceMappingURL=bundle.js.map
